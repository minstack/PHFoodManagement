//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PHFoodManagement.PHFOrderService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PHFOrderService.IPHFOrderRetrievalService")]
    public interface IPHFOrderRetrievalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPHFOrderRetrievalService/AddNewOrder", ReplyAction="http://tempuri.org/IPHFOrderRetrievalService/AddNewOrderResponse")]
        int AddNewOrder(string oDate, string dDate, decimal oTotal, bool paid, int cId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPHFOrderRetrievalService/AddNewOrder", ReplyAction="http://tempuri.org/IPHFOrderRetrievalService/AddNewOrderResponse")]
        System.Threading.Tasks.Task<int> AddNewOrderAsync(string oDate, string dDate, decimal oTotal, bool paid, int cId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPHFOrderRetrievalService/AddOrderItem", ReplyAction="http://tempuri.org/IPHFOrderRetrievalService/AddOrderItemResponse")]
        int AddOrderItem(int orderId, int productId, double quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPHFOrderRetrievalService/AddOrderItem", ReplyAction="http://tempuri.org/IPHFOrderRetrievalService/AddOrderItemResponse")]
        System.Threading.Tasks.Task<int> AddOrderItemAsync(int orderId, int productId, double quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPHFOrderRetrievalService/UpdateOrder", ReplyAction="http://tempuri.org/IPHFOrderRetrievalService/UpdateOrderResponse")]
        int UpdateOrder(string o);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPHFOrderRetrievalService/UpdateOrder", ReplyAction="http://tempuri.org/IPHFOrderRetrievalService/UpdateOrderResponse")]
        System.Threading.Tasks.Task<int> UpdateOrderAsync(string o);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPHFOrderRetrievalService/GetOrder", ReplyAction="http://tempuri.org/IPHFOrderRetrievalService/GetOrderResponse")]
        string GetOrder(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPHFOrderRetrievalService/GetOrder", ReplyAction="http://tempuri.org/IPHFOrderRetrievalService/GetOrderResponse")]
        System.Threading.Tasks.Task<string> GetOrderAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPHFOrderRetrievalService/DeleteOrder", ReplyAction="http://tempuri.org/IPHFOrderRetrievalService/DeleteOrderResponse")]
        int DeleteOrder(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPHFOrderRetrievalService/DeleteOrder", ReplyAction="http://tempuri.org/IPHFOrderRetrievalService/DeleteOrderResponse")]
        System.Threading.Tasks.Task<int> DeleteOrderAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPHFOrderRetrievalService/DeleteOrderItems", ReplyAction="http://tempuri.org/IPHFOrderRetrievalService/DeleteOrderItemsResponse")]
        int DeleteOrderItems(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPHFOrderRetrievalService/DeleteOrderItems", ReplyAction="http://tempuri.org/IPHFOrderRetrievalService/DeleteOrderItemsResponse")]
        System.Threading.Tasks.Task<int> DeleteOrderItemsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPHFOrderRetrievalService/GetAllOrders", ReplyAction="http://tempuri.org/IPHFOrderRetrievalService/GetAllOrdersResponse")]
        string GetAllOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPHFOrderRetrievalService/GetAllOrders", ReplyAction="http://tempuri.org/IPHFOrderRetrievalService/GetAllOrdersResponse")]
        System.Threading.Tasks.Task<string> GetAllOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPHFOrderRetrievalService/GetAllOrderItems", ReplyAction="http://tempuri.org/IPHFOrderRetrievalService/GetAllOrderItemsResponse")]
        string GetAllOrderItems(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPHFOrderRetrievalService/GetAllOrderItems", ReplyAction="http://tempuri.org/IPHFOrderRetrievalService/GetAllOrderItemsResponse")]
        System.Threading.Tasks.Task<string> GetAllOrderItemsAsync(int orderId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPHFOrderRetrievalServiceChannel : PHFoodManagement.PHFOrderService.IPHFOrderRetrievalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PHFOrderRetrievalServiceClient : System.ServiceModel.ClientBase<PHFoodManagement.PHFOrderService.IPHFOrderRetrievalService>, PHFoodManagement.PHFOrderService.IPHFOrderRetrievalService {
        
        public PHFOrderRetrievalServiceClient() {
        }
        
        public PHFOrderRetrievalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PHFOrderRetrievalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PHFOrderRetrievalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PHFOrderRetrievalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddNewOrder(string oDate, string dDate, decimal oTotal, bool paid, int cId) {
            return base.Channel.AddNewOrder(oDate, dDate, oTotal, paid, cId);
        }
        
        public System.Threading.Tasks.Task<int> AddNewOrderAsync(string oDate, string dDate, decimal oTotal, bool paid, int cId) {
            return base.Channel.AddNewOrderAsync(oDate, dDate, oTotal, paid, cId);
        }
        
        public int AddOrderItem(int orderId, int productId, double quantity) {
            return base.Channel.AddOrderItem(orderId, productId, quantity);
        }
        
        public System.Threading.Tasks.Task<int> AddOrderItemAsync(int orderId, int productId, double quantity) {
            return base.Channel.AddOrderItemAsync(orderId, productId, quantity);
        }
        
        public int UpdateOrder(string o) {
            return base.Channel.UpdateOrder(o);
        }
        
        public System.Threading.Tasks.Task<int> UpdateOrderAsync(string o) {
            return base.Channel.UpdateOrderAsync(o);
        }
        
        public string GetOrder(int id) {
            return base.Channel.GetOrder(id);
        }
        
        public System.Threading.Tasks.Task<string> GetOrderAsync(int id) {
            return base.Channel.GetOrderAsync(id);
        }
        
        public int DeleteOrder(int id) {
            return base.Channel.DeleteOrder(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteOrderAsync(int id) {
            return base.Channel.DeleteOrderAsync(id);
        }
        
        public int DeleteOrderItems(int id) {
            return base.Channel.DeleteOrderItems(id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteOrderItemsAsync(int id) {
            return base.Channel.DeleteOrderItemsAsync(id);
        }
        
        public string GetAllOrders() {
            return base.Channel.GetAllOrders();
        }
        
        public System.Threading.Tasks.Task<string> GetAllOrdersAsync() {
            return base.Channel.GetAllOrdersAsync();
        }
        
        public string GetAllOrderItems(int orderId) {
            return base.Channel.GetAllOrderItems(orderId);
        }
        
        public System.Threading.Tasks.Task<string> GetAllOrderItemsAsync(int orderId) {
            return base.Channel.GetAllOrderItemsAsync(orderId);
        }
    }
}
